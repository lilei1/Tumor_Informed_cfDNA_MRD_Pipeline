// Test configuration for Tumor-Informed cfDNA MRD Pipeline

// Docker configuration
docker {
    enabled = true
    runOptions = '-u $(id -u):$(id -g)'
}

// Process configuration
process {
    // Default resource requirements
    cpus = 1
    memory = '4 GB'
    time = '1h'
    
    // Error handling
    errorStrategy = 'retry'
    maxRetries = 2
    
    // Publish results
    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: 'copy',
        pattern: '*.{vcf,bam,bai,bed,txt,csv,pdf,png,html,json,tsv}'
    ]
}

// Parameters
params {
    // Input directories
    tumorDir = "$baseDir/wes/tumor"
    normalDir = "$baseDir/wes/normal"
    plasmaDir = "$baseDir/plasma/patients"
    healthyDir = "$baseDir/plasma/healthy"
    
    // Reference files
    genome = "$baseDir/refs/GRCh38.fa"
    exomeBed = "$baseDir/resources/exome.interval_list"
    gnomadVcf = "$baseDir/resources/gnomad.af-only.vcf.gz"
    ponVcf = "$baseDir/pon/pon.vcf.gz"
    dmrBed = "$baseDir/resources/dmr.bed"
    tssBed = "$baseDir/resources/tss.bed"
    
    // Additional resources for Step 2
    gcWig = "$baseDir/resources/gc_hg38.wig"
    mapWig = "$baseDir/resources/map_hg38.wig"
    
    // Output directory
    outdir = "$baseDir/results"
    
    // Analysis parameters
    minVaf = 0.001
    minDepth = 50
    minTlod = 6
    minAd = 5
    umiLength = 8
    consensusThreshold = 0.8
    
    // Plasma processing parameters
    minUmiReads = 2
    errorRatePostUmi = 45
    minInputBaseQuality = 20
    minConsensusBaseQuality = 30
    maxNoCallFraction = 0.2
    
    // Help
    help = false
}

// Report configuration
report {
    enabled = true
    file = "$params.outdir/pipeline_report.html"
}

// Timeline configuration
timeline {
    enabled = true
    file = "$params.outdir/timeline_report.html"
}

// Trace configuration
trace {
    enabled = true
    file = "$params.outdir/trace.txt"
}
